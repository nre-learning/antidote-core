syntax = "proto3";
package syringe.api.exp;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

service LessonDefService {

  // Retrieve all LessonDefs with filter
  rpc ListLessonDefs(google.protobuf.Empty) returns (LessonCategoryMap) {
    option (google.api.http) = {
      get: "/exp/lessondef/all"
    };
  }

  rpc GetLessonDef(LessonID) returns (LessonDef) {
    option (google.api.http) = {
      get: "/exp/lessondef/{id}"
    };
  }

}

message LessonCategoryMap {
  map<string, LessonDefs> lessonCategories = 1;
}

message LessonDefs {
  repeated LessonDef lessonDefs = 1;
}

message LessonID {
  int32 id = 1;
}

message LessonDef {
  int32 LessonId = 1 [(validate.rules).int32.gt = 0];
  repeated LessonStage Stages = 2 [(validate.rules).repeated.min_items = 1];
  string LessonName = 3 [(validate.rules).string.min_len = 10];
  repeated IframeResource IframeResources = 4;
  repeated Device Devices = 5;
  repeated Utility Utilities = 6;
  repeated Blackbox Blackboxes = 7;
  repeated Connection Connections = 8;
  string Category = 9 [(validate.rules).string = {in: ["introductory", "troubleshooting", "verification", "configuration"]}];
  string LessonDiagram = 10;
  string LessonVideo = 11;
  string Tier = 12 [(validate.rules).string = {in: ["local", "ptr", "prod"]}];
}

message LessonDefFilter {
  string Category = 1;
}

message LessonStage {
  int32 Id = 1 [(validate.rules).int32.gt = 0];
  string Description = 2 [(validate.rules).string.min_len = 1];
  string LabGuide = 3 [(validate.rules).string.min_len = 1];
}

message Utility {
  string Name = 1 [(validate.rules).string.min_len = 1];
  string Image = 2 [(validate.rules).string.min_len = 1];
  string Sshuser = 3 [(validate.rules).string.min_len = 1];
  string Sshpassword = 4 [(validate.rules).string.min_len = 1];
  repeated int32 Ports = 5;
}

message Blackbox {
  string Name = 1 [(validate.rules).string.min_len = 1];
  string Image = 2 [(validate.rules).string.min_len = 1];
  string Sshuser = 3;
  string Sshpassword = 4;
  repeated int32 Ports = 5;
}

message Device {
  string Name = 1 [(validate.rules).string.min_len = 1];
  string Image = 2 [(validate.rules).string.min_len = 1];
  string Sshuser = 3 [(validate.rules).string.min_len = 1];
  string Sshpassword = 4 [(validate.rules).string.min_len = 1];
  repeated int32 Ports = 5;
}

message IframeResource {
  string Ref = 1 [(validate.rules).string.min_len = 1];
  string Protocol = 2 [(validate.rules).string.min_len = 1];
  string Path = 3 [(validate.rules).string.min_len = 1];
  int32 Port = 4 [(validate.rules).int32.gt = 0];
  string RewriteDestination = 5;
}

message Connection {
  string A = 1 [(validate.rules).string.min_len = 1];
  string B = 2 [(validate.rules).string.min_len = 1];
  string Subnet = 3 [(validate.rules).string.min_len = 1];
}
