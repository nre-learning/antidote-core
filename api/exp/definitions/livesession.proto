syntax = "proto3";
package antidote.api.exp;
option go_package = ".;antidote_api_exp";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service LiveSessionsService {

  // Request a lab is created, or request the UUID of one that already exists for these parameters.
  rpc RequestLiveSession(google.protobuf.Empty) returns (LiveSession) {
    option (google.api.http) = {
      post: "/exp/livesession"
      body: "*"
    };
  }

  // THESE ARE SENSITIVE - do not expose via REST
  rpc GetLiveSession(LiveSession) returns (LiveSession) {}
  rpc CreateLiveSession(LiveSession) returns (google.protobuf.Empty) {}
  rpc ListLiveSessions(google.protobuf.Empty) returns (LiveSessions) {}
  rpc UpdateLiveSessionPersistence(SessionPersistence) returns (google.protobuf.Empty) {}
}

message LiveSession {
  string ID = 1;
  string SourceIP = 2;
  bool Persistent = 3;
}

message SessionPersistence {
  string SessionID = 1;
  bool Persistent = 2;
}

message LiveSessions {
  map<string, LiveSession> items = 1;
}
